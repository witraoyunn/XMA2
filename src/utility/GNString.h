#ifndef GN_STRING_H#define GN_STRING_H#include <string>#include <string.h>#include <vector>#include <sstream>std::vector<std::string> split(const std::string& str, const std::string& delim) {  	std::vector<std::string> res;  	if("" == str) return res;  	//�Ƚ�Ҫ�и���ַ�����string����ת��Ϊchar*����  	char * strs = new char[str.length() + 1] ; //��Ҫ����  	strcpy(strs, str.c_str());    	char * d = new char[delim.length() + 1];  	strcpy(d, delim.c_str());   	char *p = strtok(strs, d);  	while(p) {  		std::string s = p; //�ָ�õ����ַ���ת��Ϊstring����  		res.push_back(s); //����������  		p = strtok(NULL, d);  	}   	return res;  }int parse_int(const std::string& str){	std::istringstream os(str);	int result;	os >> result;	return result;}char parse_char(const std::string& str){	return (char)parse_int(str);}#endif // !GN_STRING_H