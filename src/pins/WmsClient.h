#ifndef WMSCLIENT_H#define WMSCLIENT_H#if 0#include <thread>#include <string>#include "zmq.hpp"#include "Type.h"#define WMS_SERVER_PORT			5000class WmsClient : public zmq::monitor_t {public:	enum MessageType {		NONE = 0,		PUT_INTO_NOTIFY,	};private:	zmq::context_t mContext{1};	zmq::socket_t  mClient{mContext, ZMQ_REQ};    zmq::monitor_t mMonitor;	bool isConnected = false;public:    static WmsClient* instance();		WmsClient();	~WmsClient();	    std::thread run();private:	void work();	void messageHandler(char *msg, int size);	void notify(MessageType msg, int cell_no, bool status);protected:    void on_event_connected(const zmq_event_t &, const char *)    {		isConnected = true;    }	    void on_event_disconnected(const zmq_event_t &, const char *)    {		isConnected = false;    }};#endif#endif